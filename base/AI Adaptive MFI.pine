/// ╔═══════════════════════════════╗
/// ║  AI Adaptive Money Flow Index	║
/// ║  @	Allen.					║
/// ║  ©	AlgoAlpha				║
/// ╚═══════════════════════════════╝

//@version=5
indicator("AI Adaptive Money Flow Index [Allen]", "AI MFI")


//// ─────────────────────────────────────────────────────────────────────


adapMonToolAdj							= 'Ajusta el MFI en su lugar para que los niveles de Sobrecompra, Sobreventa y Neutral permanezcan fijos'

adapMonGrpSet							= 'Adaptative MFI'
adapMonGrpLim							= 'Clustering Setting'
adapMonGrpApar							= 'Apariencia'

//// ───────────────────────
/// ─── Adaptive MFI
/// ─── Vars ─────────
//// ───────────────────────

adapMonColorLong						= 				_co_gbl_buy
adapMonColorShort						= 				_co_gbl_sell
adapMonColorAux							= 				_co_gbl_white
adapMonColorDark						= 				_co_gbl_black

showadapMonGroup						= input.bool	(defval = true,				title = 'Mostrar Ai Adaptative MFI',						group = adapMonGrpSet)
adapMonVarADJ							= input.bool	(defval = true,				title = 'Usar MFI ajustado',								group = adapMonGrpApar,		tooltip = adapMonToolAdj)

adapMonVarLENGTH						= input.int		(defval = 14,				title = 'Longitud MFI',							minval = 1,	group = adapMonGrpSet)
adapMonVarDataLength					= input.int		(defval = 300,				title = 'Nº de datos de entrenamiento',			minval = 1,	group = adapMonGrpLim)
adapMonVarIterations					= input.int		(defval = 5,				title = 'Nº de iteraciones por barra',			minval = 1,	group = adapMonGrpLim)

float adapMonVarOverbought				=				75.0			// 80.0
float adapMonVarNeutral					=				50.0
float adapMonVarOversold				=				25.0			// 20.0

adapMonVarSRC							=				gbl_Source_3	// Fuente MFI

//// ───────────────────────
/// ─── Adaptive MFI
/// ─── Functions ────
//// ───────────────────────

adapMonVarOSC							= ta.mfi(adapMonVarSRC, adapMonVarLENGTH)

var adapMonArrOB						= array.new_float(1, adapMonVarOverbought)
var adapMonArrNE						= array.new_float(1, adapMonVarNeutral)
var adapMonArrOS						= array.new_float(1, adapMonVarOversold)

adapMonArrNE_NEW						= array.avg(adapMonArrNE)
adapMonArrOB_NEW						= array.avg(adapMonArrOB)
adapMonArrOS_NEW						= array.avg(adapMonArrOS)

positionBetweenBands					= 100 * ((adapMonVarOSC - adapMonArrOS_NEW)/(adapMonArrOB_NEW - adapMonArrOS_NEW))

adapMonIfVAL							= adapMonVarADJ ? positionBetweenBands : adapMonVarOSC

adapMonFuncST							= ta.stdev(adapMonIfVAL, adapMonVarLENGTH)

adapMonIfCOLOR100						= adapMonVarOSC > adapMonArrNE_NEW		? color.new(adapMonColorLong, 90)		: color.new(adapMonColorShort, 90)
adapMonIfCOLOR0							= adapMonVarOSC > adapMonArrNE_NEW		? color.new(adapMonColorLong, 0)		: color.new(adapMonColorShort, 0)

//// ───────────────────────
/// ─── Adaptive MFI
/// ─── Display ──────
//// ───────────────────────

adapMonPlotMAIN							= plot	(strGlobalMultiHistogram == 'Mfi' and showadapMonGroup ? adapMonIfVAL : na,						color = adapMonIfCOLOR100)
adapMonPlotMID							= plot	(strGlobalMultiHistogram == 'Mfi' and showadapMonGroup and adapMonVarADJ ? adapMonVarNeutral : adapMonArrNE_NEW, color = adapMonIfCOLOR100)

/// ─── plot marcas de sobrecompra y sobreventa
plot									(showadapMonGroup ? adapMonVarADJ ? 110 : adapMonArrOB_NEW : na,										color = color.from_gradient(adapMonVarOSC, adapMonArrNE_NEW, adapMonVarADJ ? 100 : adapMonArrOB_NEW, color.new(adapMonColorDark, 70), color.new(adapMonColorShort, 0)),	linewidth = 6)
plot									(showadapMonGroup ? adapMonVarADJ ? -10 : adapMonArrOS_NEW : na,										color = color.from_gradient(adapMonVarOSC, adapMonVarADJ ? 0 : adapMonArrOS_NEW, adapMonArrNE_NEW, color.new(adapMonColorLong, 0), color.new(adapMonColorDark, 70)),	linewidth = 6)

/// ─── fill areas de tendencia
fill									(adapMonPlotMID, adapMonPlotMAIN,																		color = adapMonIfCOLOR100, title = 'Area de Tendencia')
fill									(adapMonPlotMID, adapMonPlotMAIN, adapMonIfVAL, adapMonVarADJ ? 50 : adapMonArrNE_NEW,					color.new(chart.bg_color, 1000), adapMonVarOSC > adapMonArrNE_NEW ? adapMonColorLong : adapMonColorShort)

//// ─────────────────────────────────────────────────────────────────────
